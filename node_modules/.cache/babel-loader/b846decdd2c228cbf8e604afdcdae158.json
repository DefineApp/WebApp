{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saffa\\\\OneDrive\\\\Desktop\\\\Github\\\\WebApp\\\\src\\\\Components\\\\contacts\\\\Contacts.js\";\nimport React, { Fragment, useContext } from \"react\";\nimport ContactItem from \"./ContactItem\";\nimport ContactContext from \"../../context/contact/contactContext\";\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n  const {\n    contacts,\n    filtered\n  } = contactContext;\n\n  if (contacts.length === 0) {\n    return /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 12\n      }\n    }, \" Please add a Challenge\");\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, filtered !== null ? filtered.map(contact => /*#__PURE__*/React.createElement(ContactItem, {\n    key: contact.id,\n    contact: contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  })) : contacts.map(contact => /*#__PURE__*/React.createElement(ContactItem, {\n    key: contact.id,\n    contact: contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["C:/Users/Saffa/OneDrive/Desktop/Github/WebApp/src/Components/contacts/Contacts.js"],"names":["React","Fragment","useContext","ContactItem","ContactContext","Contacts","contactContext","contacts","filtered","length","map","contact","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,cAAc,GAAGJ,UAAU,CAACE,cAAD,CAAjC;AACA,QAAM;AAAEG,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBF,cAA/B;;AAEA,MAAIC,QAAQ,CAACE,MAAT,KAAoB,CAAxB,EAA2B;AACzB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACD;;AACD,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,KAAK,IAAb,GACGA,QAAQ,CAACE,GAAT,CAAcC,OAAD,iBACX,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA1B;AAA8B,IAAA,OAAO,EAAED,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADH,GAIGJ,QAAQ,CAACG,GAAT,CAAcC,OAAD,iBACX,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA1B;AAA8B,IAAA,OAAO,EAAED,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALN,CADF;AAYD,CAnBD;;AAoBA,eAAeN,QAAf","sourcesContent":["import React, { Fragment, useContext } from \"react\";\r\nimport ContactItem from \"./ContactItem\";\r\nimport ContactContext from \"../../context/contact/contactContext\";\r\n\r\nconst Contacts = () => {\r\n  const contactContext = useContext(ContactContext);\r\n  const { contacts, filtered } = contactContext;\r\n\r\n  if (contacts.length === 0) {\r\n    return <h4> Please add a Challenge</h4>;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {filtered !== null\r\n        ? filtered.map((contact) => (\r\n            <ContactItem key={contact.id} contact={contact} />\r\n          ))\r\n        : contacts.map((contact) => (\r\n            <ContactItem key={contact.id} contact={contact} />\r\n          ))}\r\n      {}\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Contacts;\r\n"]},"metadata":{},"sourceType":"module"}