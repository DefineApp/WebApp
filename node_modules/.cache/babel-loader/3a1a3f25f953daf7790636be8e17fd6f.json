{"ast":null,"code":"import { ADD_CHALLENGE, DELETE_CHALLENGE, SET_CURRENT, CLEAR_CURRENT, UPDATE_CHALLENGE, FILTER_CHALLENGE, CLEAR_FILTER } from \"../types\";\nexport default ((state, action) => {\n  switch (action.type) {\n    case ADD_CHALLENGE:\n      return { ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n\n    case DELETE_CHALLENGE:\n      return { ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Saffa/OneDrive/Desktop/Github/WebApp/src/context/contact/contactReducer.js"],"names":["ADD_CHALLENGE","DELETE_CHALLENGE","SET_CURRENT","CLEAR_CURRENT","UPDATE_CHALLENGE","FILTER_CHALLENGE","CLEAR_FILTER","state","action","type","contacts","payload","filter","contact","id","current"],"mappings":"AAAA,SACEA,aADF,EAEEC,gBAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,gBALF,EAMEC,gBANF,EAOEC,YAPF,QAQO,UARP;AAUA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,aAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B;AAFL,OAAP;;AAIF,SAAKV,gBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeE,MAAf,CACPC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACG,OAD3B;AAFL,OAAP;;AAMF,SAAKT,WAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELQ,QAAAA,OAAO,EAAEP,MAAM,CAACG;AAFX,OAAP;;AAIF,SAAKR,aAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELQ,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF;AACE,aAAOR,KAAP;AAxBJ;AA0BD,CA3BD","sourcesContent":["import {\r\n  ADD_CHALLENGE,\r\n  DELETE_CHALLENGE,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CHALLENGE,\r\n  FILTER_CHALLENGE,\r\n  CLEAR_FILTER,\r\n} from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_CHALLENGE:\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, action.payload],\r\n      };\r\n    case DELETE_CHALLENGE:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}