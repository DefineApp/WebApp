{"ast":null,"code":"var _jsxFileName = \"/Users/np/Documents/GitHub/WebApp/src/Components/pages/Submissions.js\";\nimport React from \"react\";\nimport { getImages } from \"./request\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport Masonry from \"react-masonry-component\";\nimport \"./Submissions.css\";\nimport { masonryOptions } from \"./exports\";\n\nfunction Submissions() {\n  const [images, setImages] = React.useState([]);\n  const [page, setPage] = React.useState(1);\n  const [total, setTotal] = React.useState(0);\n  const [initialized, setInitialized] = React.useState(false);\n\n  const getAllImages = async (pg = 1) => {\n    const response = await getImages(page);\n    let imgs = images.concat(response.data.hits);\n    setImages(imgs);\n    setTotal(response.data.total);\n    pg++;\n    setPage(pg);\n  };\n\n  React.useEffect(() => {\n    if (!initialized) {\n      getAllImages();\n      setInitialized(true);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Home\"), /*#__PURE__*/React.createElement(InfiniteScroll, {\n    pageStart: 1,\n    loadMore: getAllImages,\n    hasMore: total > images.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Masonry, {\n    className: \"grid\",\n    elementType: \"div\",\n    options: masonryOptions,\n    disableImagesLoaded: false,\n    updateOnEachImageLoad: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, images.map((img, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: img.previewURL,\n      style: {\n        width: 300\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }));\n  }))));\n}\n\nexport default Submissions;","map":{"version":3,"sources":["/Users/np/Documents/GitHub/WebApp/src/Components/pages/Submissions.js"],"names":["React","getImages","InfiniteScroll","Masonry","masonryOptions","Submissions","images","setImages","useState","page","setPage","total","setTotal","initialized","setInitialized","getAllImages","pg","response","imgs","concat","data","hits","useEffect","length","map","img","i","previewURL","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAO,mBAAP;AACA,SAASC,cAAT,QAA+B,WAA/B;;AAGA,SAASC,WAAT,GAAuB;AACrB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,KAAK,CAACQ,QAAN,CAAe,CAAf,CAAxB;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBZ,KAAK,CAACQ,QAAN,CAAe,CAAf,CAA1B;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCd,KAAK,CAACQ,QAAN,CAAe,KAAf,CAAtC;;AACA,QAAMO,YAAY,GAAG,OAAOC,EAAE,GAAG,CAAZ,KAAkB;AACrC,UAAMC,QAAQ,GAAG,MAAMhB,SAAS,CAACQ,IAAD,CAAhC;AACA,QAAIS,IAAI,GAAGZ,MAAM,CAACa,MAAP,CAAcF,QAAQ,CAACG,IAAT,CAAcC,IAA5B,CAAX;AACAd,IAAAA,SAAS,CAACW,IAAD,CAAT;AACAN,IAAAA,QAAQ,CAACK,QAAQ,CAACG,IAAT,CAAcT,KAAf,CAAR;AACAK,IAAAA,EAAE;AACFN,IAAAA,OAAO,CAACM,EAAD,CAAP;AACD,GAPD;;AAQAhB,EAAAA,KAAK,CAACsB,SAAN,CAAgB,MAAM;AACpB,QAAI,CAACT,WAAL,EAAkB;AAChBE,MAAAA,YAAY;AACZD,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,GALD;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,cAAD;AACE,IAAA,SAAS,EAAE,CADb;AAEE,IAAA,QAAQ,EAAEC,YAFZ;AAGE,IAAA,OAAO,EAAEJ,KAAK,GAAGL,MAAM,CAACiB,MAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,OAAD;AACE,IAAA,SAAS,EAAE,MADb;AAEE,IAAA,WAAW,EAAE,KAFf;AAGE,IAAA,OAAO,EAAEnB,cAHX;AAIE,IAAA,mBAAmB,EAAE,KAJvB;AAKE,IAAA,qBAAqB,EAAE,KALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGE,MAAM,CAACkB,GAAP,CAAW,CAACC,GAAD,EAAMC,CAAN,KAAY;AACtB,wBACE;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAED,GAAG,CAACE,UAAd;AAA0B,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD,GANA,CAPH,CALF,CAFF,CADF;AA0BD;;AACD,eAAevB,WAAf","sourcesContent":["import React from \"react\";\nimport { getImages } from \"./request\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport Masonry from \"react-masonry-component\";\nimport \"./Submissions.css\";\nimport { masonryOptions } from \"./exports\";\n\n\nfunction Submissions() {\n  const [images, setImages] = React.useState([]);\n  const [page, setPage] = React.useState(1);\n  const [total, setTotal] = React.useState(0);\n  const [initialized, setInitialized] = React.useState(false);\n  const getAllImages = async (pg = 1) => {\n    const response = await getImages(page);\n    let imgs = images.concat(response.data.hits);\n    setImages(imgs);\n    setTotal(response.data.total);\n    pg++;\n    setPage(pg);\n  };\n  React.useEffect(() => {\n    if (!initialized) {\n      getAllImages();\n      setInitialized(true);\n    }\n  });\n  return (\n    <div className=\"page\">\n      <h1 className=\"text-center\">Home</h1>\n      <InfiniteScroll\n        pageStart={1}\n        loadMore={getAllImages}\n        hasMore={total > images.length}\n      >\n        <Masonry\n          className={\"grid\"}\n          elementType={\"div\"}\n          options={masonryOptions}\n          disableImagesLoaded={false}\n          updateOnEachImageLoad={false}\n        >\n          {images.map((img, i) => {\n            return (\n              <div key={i}>\n                <img src={img.previewURL} style={{ width: 300 }} />\n              </div>\n            );\n          })}\n        </Masonry>\n      </InfiniteScroll>\n    </div>\n  );\n}\nexport default Submissions;"]},"metadata":{},"sourceType":"module"}